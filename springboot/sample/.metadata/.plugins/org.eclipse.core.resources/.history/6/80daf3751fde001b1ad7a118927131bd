package sample1;

class sample1 {

}

import java.util.*;

interface ValueContainer extends Iterable<Integer> {}

class SingleValue implements ValueContainer
{
  public int value;

// please leave this constructor as-is
  public SingleValue(int value)
  {
    this.value = value;
  }

@Override
public Iterator<Integer> iterator() {
	// TODO Auto-generated method stub
	return null;
}
}

class ManyValues extends ArrayList<Integer> implements ValueContainer
{
}


class MyList extends ArrayList<ValueContainer>
{
    // please leave this constructor as-is
  public MyList(Collection<? extends ValueContainer> c)
  {
    super(c);
  }

  public int sum()
  {
      int sum = 0;
    for(ValueContainer vc: this.){
        while(vc.iterator().hasNext()){
            sum += vc.iterator().next();
        }
    }
    return sum;
  }
}